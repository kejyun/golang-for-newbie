













































[{"body":"列印陣列 var name_list = []string{`Golang`, `Python`, `PHP`} for key, value := range name_list { fmt.Printf(\"language key: %d = %s\\n\", key, value) } // language key: 0 = Golang // language key: 1 = Python // language key: 2 = PHP arr1 := [3][2]int{{1, 2}, {3, 4}, {5, 6}} fmt.Println(arr1) // [[1 2] [3 4] [5 6]]  for key, value := range arr1 { fmt.Printf(\"%d =\u003e %d\\n\", key, value) } // 0 =\u003e [1 2] // 1 =\u003e [3 4] // 2 =\u003e [5 6] ","categories":["Golang","教學文件","新手教學","基礎","for 迴圈"],"description":"Golang 基礎: for 迴圈","excerpt":"Golang 基礎: for 迴圈","ref":"/basic/for-loop/for/","tags":["Golang","教學文件","新手教學","基礎","for 迴圈"],"title":"for"},{"body":"一般變數宣告 一般變數宣告預設值 var num int = 0 var num int 一般變數宣告指定值 var num int = 10 var num = 10 單行宣告  應少用，程式碼可讀性不高\n var name, age, height = \"KJ\", 18, 199.9 多行宣告 var ( name = \"KJ\" age = 18 height = 199.9 ) 多行宣告加入型態 var ( name string = \"KJ\" age uint = 18 height float32 = 199.9 ) 多行宣告沒有設定預設值 var ( name string age uint height float32 ) 短變數宣告 name := \"KJ\" age := 18 height := 199.9 單行短變數宣告  應少用，程式碼可讀性不高\n name, age, height := \"KJ\", 18, 199.9 常數變數宣告 一般常數宣告 const AGE int = 18 單行常數宣告  應少用，程式碼可讀性不高\n const AUTHOR, AGE = \"KJ\", 18 多行常數宣告 const ( AUTHOR = \"KJ\" AGE = 18 ) ","categories":["Golang","教學文件","新手教學","基礎","一般變數"],"description":"Golang 基礎: 一般變數","excerpt":"Golang 基礎: 一般變數","ref":"/basic/data-type/normal/","tags":["Golang","教學文件","新手教學","基礎","一般變數"],"title":"一般"},{"body":"跳脫字元    類型 說明     “雙引號” 可跳脫字元   `重音符` 保留原始字串    a := \"雙引號:可跳脫字元\\t \\n等\" b := `重音符:保留原始字串 \\t \\n 等` fmt.Println(a) fmt.Println(b) // 雙引號:可跳脫字元 // 等 // 重音符:保留原始字串 \\t \\n 等 列印函數    類型 說明 description     fmt.Print 列印 print   fmt.Println 列印 + 換行 print + new line   fmt.Printf 格式化列印(沒有換行) format print    fmt.Print 列印 a := `KJ` fmt.Print(a) fmt.Print(a) fmt.Print(a) // KJKJKJ fmt.Println 列印 + 換行 a := `KJ` fmt.Println(a) fmt.Println(a) fmt.Println(a) // KJ // KJ // KJ fmt.Printf 格式化列印 a := `KJ` fmt.Printf(\"a: %v type: %T\\n\", a, a) // a: KJ type: string 參考資料  fmt - The Go Programming Language # Day06 Go開教基本語法 (fmt) - iT 邦幫忙::一起幫忙解決難題，拯救 IT 人的一天  ","categories":["Golang","教學文件","新手教學","基礎","列印"],"description":"Golang 基礎: 列印","excerpt":"Golang 基礎: 列印","ref":"/basic/print/","tags":["Golang","教學文件","新手教學","基礎","列印"],"title":"列印"},{"body":"一般    類型 說明 description     %v 預設格式 default format   %+v 預設格式加上欄位名稱 default format with field names   %#v golang 語法格式 Go-syntax format   %T golang 資料類型 Go-syntax type of value   %% 百分比符號 percent sign    預設格式 %v a := 26 fmt.Printf(\"a: %v\\n\", a) // a: 26 a := `KJ` fmt.Printf(\"a: %v\\n\", a) // a: KJ type Developer struct { name string age int is_working bool } func main() { fmt.Printf(\"Developer: %v\\n\", Developer{}) // Developer: { 0 false} } 預設格式加上欄位名稱 %+v type Developer struct { name string age int is_working bool } func main() { fmt.Printf(\"Developer: %+v\\n\", Developer{}) // Developer: {name: age:0 is_working:false} } golang 語法格式 %#v a := 26 fmt.Printf(\"a: %#v\\n\", a) // a: 26 a := `KJ` fmt.Printf(\"a: %#v\\n\", a) // a: \"KJ\" var a = []float64{1, 2, 4, 8, 16, 32, 64, 128} fmt.Printf(\"a: %#v\\n\", a) // a: []float64{1, 2, 4, 8, 16, 32, 64, 128} type Developer struct { name string age int is_working bool } func main() { fmt.Printf(\"Developer: %#v\\n\", Developer{}) // Developer: main.Developer{name:\"\", age:0, is_working:false} } golang 資料類型 %T var a = []float64{1, 2, 4, 8, 16, 32, 64, 128} fmt.Printf(\"a: %T\\n\", a) // a: []float64 a := 26 fmt.Printf(\"a: %T\\n\", a) // a: int a := `KJ` fmt.Printf(\"a: %T\\n\", a) // a: string 百分比符號 %% fmt.Printf(\"percent sign: %%\\n\") // percent sign: % 布林值    類型 說明 description     %t 布林值 true or false    布林值 %t a := true fmt.Printf(\"a: %t\\n\", a) // a: true a := 1 fmt.Printf(\"a: %t\\n\", a) // a: %!t(int=1) a := `KJ` fmt.Printf(\"a: %t\\n\", a) // a: %!t(string=KJ) 整數    類型 說明 description     %d 十進位數字 base 10   %b 二進位數字 base 2   %o 八進位數字 base 8   %O 八進位數字 base 8 with 0o prefix   %x 十六進位數字(小寫) base 16 with lower-case   %X 十六進位數字(大寫) base 16 with upper-case   %c 字元 ASCII 字元   %s 字串 一般字串   %U Unicode -    十進位數字 %d a := 10 fmt.Printf(\"a: %d\\n\", a) // a: 10 二進位數字 %b a := 10 fmt.Printf(\"a: %b\\n\", a) // a: 1010 八進位數字 %o %O a := 10 fmt.Printf(\"a: %o\\n\", a) // a: 12 a := 10 fmt.Printf(\"a: %O\\n\", a) // a: 0o12 十六進位數字 %x %X a := 26 fmt.Printf(\"a: %x\\n\", a) // a: 1a a := 26 fmt.Printf(\"a: %X\\n\", a) // a: 1A 字串 %s a := `KJ` fmt.Printf(\"a: %s\\n\", a) // a: KJ a := 75 fmt.Printf(\"a: %s\\n\", a) // a: %!s(int=75) ASCII 字元 %c a := 75 fmt.Printf(\"a: %c\\n\", a) // a: K Unicode 字元 %U a := 26 fmt.Printf(\"a: %U\\n\", a) // a: U+001A 參考資料  fmt - The Go Programming Language # Day06 Go開教基本語法 (fmt) - iT 邦幫忙::一起幫忙解決難題，拯救 IT 人的一天  ","categories":["Golang","教學文件","新手教學","基礎","列印格式"],"description":"Golang 基礎: 列印格式","excerpt":"Golang 基礎: 列印格式","ref":"/basic/print/format/","tags":["Golang","教學文件","新手教學","基礎","列印格式"],"title":"格式"},{"body":"","categories":["Golang","教學文件","新手教學","基礎"],"description":"Golang 基礎","excerpt":"Golang 基礎","ref":"/basic/","tags":["Golang","教學文件","新手教學","基礎"],"title":"基礎"},{"body":"整數    類型 min max 範圍     uint8 or byte 0 255 2^0 ~ 2^8   uint16 0 65585 2^0 ~ 2^16   uint32 or rune 0 4294967296 2^0 ~ 2^32   uint64 0 1.84467E+19 2^0 ~ 2^64   int8 -128 128 - 1 -2^7 ~ 2^7 - 1   int16 -32768 32768 - 1 -2^15 ~ 2^15 - 1   int32 -2147483648 2147483648 - 1 -2^31 ~ 2^31 - 1   int64 -9.22337E+18 9.22337E+18 - 1 -2^63 ~ 2^63 - 1    浮點數    類型 min max 範圍     float32 - - -1.410^-45 ~ 3.410^38   float64 - - -4.9410^-324 ~ 1.7910^308    參考資料  [Golang] 程式設計教學：資料型態 (Data Type) | Michael Chen 的技術文件  ","categories":["Golang","教學文件","新手教學","基礎","變數類型"],"description":"Golang 基礎: 變數類型","excerpt":"Golang 基礎: 變數類型","ref":"/basic/data-type/","tags":["Golang","教學文件","新手教學","基礎","變數類型"],"title":"變數類型"},{"body":"陣列 指定陣列大小 var arr [5]int arr[0] = 1 arr[1] = 2 arr[4] = 5 fmt.Println(arr) // [1 2 0 0 5] arr := [5]int{1, 2, 3} fmt.Println(arr) // [1 2 3 0 0] 不指定陣列大小 arr := [...]int{1, 2, 3, 4, 5} fmt.Println(arr) // [1 2 3 4 5] 巢狀陣列 var arr [3][2]int fmt.Println(arr) // [[0 0] [0 0] [0 0]] 指定巢狀陣列預設值 arr1 := [3][2]int{{1, 2}, {3, 4}, {5, 6}} fmt.Println(arr1) // [[1 2] [3 4] [5 6]]  arr2 := [...][2]int{{1, 2}, {3, 4}, {5, 6}} fmt.Println(arr2) // [[1 2] [3 4] [5 6]] 複製陣列 限制陣列長度 arr := [5]int{1, 2, 3, 4, 5} // 指定要複製的陣列 var arr_copy [5]int arr_copy = arr arr_copy[3] = 99 fmt.Println(arr) // [1 2 3 4 5] fmt.Println(arr_copy) // [1 2 3 99 5] 不限制陣列長度  複製的陣列會變成傳址的方式\n arr := []int{1, 2, 3, 4, 5, 6, 7} var arr_copy []int arr_copy = arr arr_copy[3] = 99 fmt.Println(arr) // [1 2 3 99 5 6 7] fmt.Println(arr_copy) // [1 2 3 99 5 6 7] ","categories":["Golang","教學文件","新手教學","基礎","陣列變數"],"description":"Golang 基礎: 陣列變數","excerpt":"Golang 基礎: 陣列變數","ref":"/basic/data-type/array/","tags":["Golang","教學文件","新手教學","基礎","陣列變數"],"title":"陣列"},{"body":"","categories":["Golang","教學文件","新手教學","基礎","迴圈"],"description":"Golang 基礎: 迴圈","excerpt":"Golang 基礎: 迴圈","ref":"/basic/for-loop/","tags":["Golang","教學文件","新手教學","基礎","迴圈"],"title":"迴圈"},{"body":"","categories":["Golang","教學文件","新手教學","常見問題","Debug"],"description":"Debug","excerpt":"Debug","ref":"/question/debug/","tags":["Golang","教學文件","新手教學","常見問題","Debug"],"title":"Debug"},{"body":"在測試除錯時，想要中斷後面的程式，可以使用 os.Exit(0)\n中斷程式沒有錯誤代碼 去中斷整個程式的執行，參數為 0 實則不會列印出錯誤代碼\npackage main import ( \"fmt\" \"os\" ) func main() { fmt.Println(\"Hello World\") // 中斷程式 \tos.Exit(0) // 不會執行 \tfmt.Println(\"Something else...\") } 中斷程式含錯誤代碼 在 os.Exit(1) 帶入參數則可以顯示錯誤代碼\npackage main import ( \"fmt\" \"os\" ) func main() { fmt.Println(\"Exits with status code 1\") // 列印錯誤代碼 \tos.Exit(1) } 參考資料  Exit an Application, With or Without an Error Code · GolangCode Exit with error code in go? - Stack Overflow  ","categories":["Golang","教學文件","新手教學","常見問題","Debug","中斷程式"],"description":"中斷程式","excerpt":"中斷程式","ref":"/question/debug/exit-application/","tags":["Golang","教學文件","新手教學","常見問題","Debug","中斷程式"],"title":"中斷程式"},{"body":"","categories":["Golang","教學文件","新手教學"],"description":"","excerpt":"","ref":"/docs/","tags":["Golang","教學文件","新手教學"],"title":"教學文件"},{"body":"參考資料  GolangCode - A Library of Go Snippets  ","categories":["Golang","教學文件","新手教學","常見問題"],"description":"Golang 常見問題","excerpt":"Golang 常見問題","ref":"/question/","tags":["Golang","教學文件","新手教學","常見問題"],"title":"Golang 常見問題"},{"body":"官方  A Tour of Go  教學網站  Go 語言教學 | 線上程式語言教學練習 GoLang入門基礎: - HackMD GoLang進階語法: - HackMD GoLang 應用範例: - HackMD Learn Go with tests - learn-go-with-tests Introduction - 使用 Golang 打造 Web 應用程式  GitHub - doggy8088/build-web-application-with-golang-zhtw: 使用 Golang 打造 Web 應用程式 (正體中文版)    範例  Go by Example 序 | LeetCode Cookbook  GitHub - halfrost/LeetCode-Go: ✅ Solutions to LeetCode by Go, 100% test coverage, runtime beats 100% / LeetCode 题解    文章  [Golang] 程式設計教學 | Michael Chen 的技術文件  Go 語言筆記(0) — 學這能幹嘛？. 「即將啟程的旅人啊，汝為何而Go?」 | by Jyue Chen | 整個程式都是我的咖啡館 | Medium   從無到有，使用 Go 開發應用程式 :: 2018 iT 邦幫忙鐵人賽  影片  Learn Go Programming - Golang Tutorial for Beginners - YouTube  ","categories":["Golang","教學文件","新手教學","資源"],"description":"Golang 資源","excerpt":"Golang 資源","ref":"/docs/resource/","tags":["Golang","教學文件","新手教學","資源"],"title":"資源"},{"body":"  #td-cover-block-0 { background-image: url(/hugo-background-1_hu348189a7f185b762e60e6aa110cecbb0_75733_960x540_fill_catmullrom_bottom_2.png); } @media only screen and (min-width: 1200px) { #td-cover-block-0 { background-image: url(/hugo-background-1_hu348189a7f185b762e60e6aa110cecbb0_75733_1920x1080_fill_catmullrom_bottom_2.png); } }  Golang for newbie Golang 菜雞踩雷學習筆記        記錄學習 Golang 遇到各種不同的系統狀況處理紀錄\n   ","categories":"","description":"","excerpt":"  #td-cover-block-0 { background-image: url(/hugo-background-1_hu348189a7f185b762e60e6aa110cecbb0_75733_960x540_fill_catmullrom_bottom_2.png); } @media only screen and (min-width: 1200px) { #td-cover-block-0 { background-image: …","ref":"/","tags":"","title":"Golang for newbie"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/","tags":"","title":"Categories"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/for-%E8%BF%B4%E5%9C%88/","tags":"","title":"for 迴圈"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/for-%E8%BF%B4%E5%9C%88/","tags":"","title":"for 迴圈"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/golang/","tags":"","title":"Golang"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/golang/","tags":"","title":"Golang"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/","tags":"","title":"Tags"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/%E4%B8%80%E8%88%AC%E8%AE%8A%E6%95%B8/","tags":"","title":"一般變數"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/%E4%B8%80%E8%88%AC%E8%AE%8A%E6%95%B8/","tags":"","title":"一般變數"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/%E5%88%97%E5%8D%B0/","tags":"","title":"列印"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/%E5%88%97%E5%8D%B0/","tags":"","title":"列印"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/%E5%88%97%E5%8D%B0%E6%A0%BC%E5%BC%8F/","tags":"","title":"列印格式"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/%E5%88%97%E5%8D%B0%E6%A0%BC%E5%BC%8F/","tags":"","title":"列印格式"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/%E5%9F%BA%E7%A4%8E/","tags":"","title":"基礎"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/%E5%9F%BA%E7%A4%8E/","tags":"","title":"基礎"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/%E6%95%99%E5%AD%B8%E6%96%87%E4%BB%B6/","tags":"","title":"教學文件"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/%E6%95%99%E5%AD%B8%E6%96%87%E4%BB%B6/","tags":"","title":"教學文件"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/%E6%96%B0%E6%89%8B%E6%95%99%E5%AD%B8/","tags":"","title":"新手教學"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/%E6%96%B0%E6%89%8B%E6%95%99%E5%AD%B8/","tags":"","title":"新手教學"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/%E8%AE%8A%E6%95%B8%E9%A1%9E%E5%9E%8B/","tags":"","title":"變數類型"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/%E8%AE%8A%E6%95%B8%E9%A1%9E%E5%9E%8B/","tags":"","title":"變數類型"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/%E8%BF%B4%E5%9C%88/","tags":"","title":"迴圈"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/%E8%BF%B4%E5%9C%88/","tags":"","title":"迴圈"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/%E9%99%A3%E5%88%97%E8%AE%8A%E6%95%B8/","tags":"","title":"陣列變數"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/%E9%99%A3%E5%88%97%E8%AE%8A%E6%95%B8/","tags":"","title":"陣列變數"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/debug/","tags":"","title":"Debug"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/debug/","tags":"","title":"Debug"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/%E4%B8%AD%E6%96%B7%E7%A8%8B%E5%BC%8F/","tags":"","title":"中斷程式"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/%E4%B8%AD%E6%96%B7%E7%A8%8B%E5%BC%8F/","tags":"","title":"中斷程式"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/%E5%B8%B8%E8%A6%8B%E5%95%8F%E9%A1%8C/","tags":"","title":"常見問題"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/%E5%B8%B8%E8%A6%8B%E5%95%8F%E9%A1%8C/","tags":"","title":"常見問題"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/%E8%B3%87%E6%BA%90/","tags":"","title":"資源"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/%E8%B3%87%E6%BA%90/","tags":"","title":"資源"}]